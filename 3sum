Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

solution:
/**
 * @param {number[]} nums
 * @return {number[][]}
 */
var threeSum = function(nums) {
          nums.sort((a, b) => a - b);
        let results = [];
        for (let i = 0; i < nums.length; i++) {
            let j = i + 1;
            let k = nums.length - 1;

            while (j < k) {
                const sum = nums[i] + nums[j] + nums[k];
                if (sum === 0) {
                    results.push([nums[i], nums[j], nums[k]]);

                    while (j < k && nums[j] == nums[j + 1]) {
                        j++;
                    }
                    j++;

                    while (k > j && nums[k] == nums[k - 1]) {
                        k--;
                    }
                    k--;
                } else if (sum < 0) {
                    j++;
                } else {
                    k--;
                }
            }

            while (i < nums.length - 1 && nums[i] == nums[i + 1]) {
                i++;
            }
        }

        return results;
};
